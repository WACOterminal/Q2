apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-system
  labels:
    app.kubernetes.io/name: external-secrets-operator
    app.kubernetes.io/managed-by: kustomize
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-secret-store
  namespace: q-platform
  labels:
    app.kubernetes.io/name: vault-secret-store
    app.kubernetes.io/managed-by: kustomize
spec:
  provider:
    vault:
      server: "https://vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "q-platform-role"
          serviceAccountRef:
            name: "external-secrets-sa"
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-cluster-secret-store
  labels:
    app.kubernetes.io/name: vault-cluster-secret-store
    app.kubernetes.io/managed-by: kustomize
spec:
  provider:
    vault:
      server: "https://vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "q-platform-cluster-role"
          serviceAccountRef:
            name: "external-secrets-sa"
            namespace: "external-secrets-system"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: q-platform
  labels:
    app.kubernetes.io/name: external-secrets-sa
    app.kubernetes.io/managed-by: kustomize
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-vault-role
  labels:
    app.kubernetes.io/name: external-secrets-vault-role
    app.kubernetes.io/managed-by: kustomize
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["serviceaccounts/token"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-vault-binding
  labels:
    app.kubernetes.io/name: external-secrets-vault-binding
    app.kubernetes.io/managed-by: kustomize
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-vault-role
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: q-platform
---
# External Secret for Manager Q
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: manager-q-vault-secrets
  namespace: q-platform
  labels:
    app.kubernetes.io/name: manager-q-vault-secrets
    app.kubernetes.io/component: manager-q
    app.kubernetes.io/managed-by: kustomize
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: manager-q-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: manager-q-secrets
          app.kubernetes.io/component: manager-q
      data:
        VAULT_TOKEN: "{{ .vault_token }}"
        VAULT_ADDR: "{{ .vault_addr }}"
        API_SECRET_KEY: "{{ .api_secret_key }}"
        IGNITE_USERNAME: "{{ .ignite_username }}"
        IGNITE_PASSWORD: "{{ .ignite_password }}"
        PULSAR_AUTH_TOKEN: "{{ .pulsar_auth_token }}"
        PULSAR_TLS_CERT: "{{ .pulsar_tls_cert }}"
        PULSAR_TLS_KEY: "{{ .pulsar_tls_key }}"
        SERVICE_AUTH_TOKEN: "{{ .service_auth_token }}"
        VECTORSTORE_AUTH_TOKEN: "{{ .vectorstore_auth_token }}"
        KNOWLEDGEGRAPH_AUTH_TOKEN: "{{ .knowledgegraph_auth_token }}"
        QUANTUMPULSE_AUTH_TOKEN: "{{ .quantumpulse_auth_token }}"
        ENCRYPTION_KEY: "{{ .encryption_key }}"
        JWT_SECRET: "{{ .jwt_secret }}"
        JAEGER_AGENT_HOST: "{{ .jaeger_agent_host }}"
        PROMETHEUS_AUTH_TOKEN: "{{ .prometheus_auth_token }}"
  data:
  - secretKey: vault_token
    remoteRef:
      key: secret/manager-q
      property: vault_token
  - secretKey: vault_addr
    remoteRef:
      key: secret/manager-q
      property: vault_addr
  - secretKey: api_secret_key
    remoteRef:
      key: secret/manager-q
      property: api_secret_key
  - secretKey: ignite_username
    remoteRef:
      key: secret/manager-q
      property: ignite_username
  - secretKey: ignite_password
    remoteRef:
      key: secret/manager-q
      property: ignite_password
  - secretKey: pulsar_auth_token
    remoteRef:
      key: secret/manager-q
      property: pulsar_auth_token
  - secretKey: pulsar_tls_cert
    remoteRef:
      key: secret/manager-q
      property: pulsar_tls_cert
  - secretKey: pulsar_tls_key
    remoteRef:
      key: secret/manager-q
      property: pulsar_tls_key
  - secretKey: service_auth_token
    remoteRef:
      key: secret/manager-q
      property: service_auth_token
  - secretKey: vectorstore_auth_token
    remoteRef:
      key: secret/manager-q
      property: vectorstore_auth_token
  - secretKey: knowledgegraph_auth_token
    remoteRef:
      key: secret/manager-q
      property: knowledgegraph_auth_token
  - secretKey: quantumpulse_auth_token
    remoteRef:
      key: secret/manager-q
      property: quantumpulse_auth_token
  - secretKey: encryption_key
    remoteRef:
      key: secret/manager-q
      property: encryption_key
  - secretKey: jwt_secret
    remoteRef:
      key: secret/manager-q
      property: jwt_secret
  - secretKey: jaeger_agent_host
    remoteRef:
      key: secret/manager-q
      property: jaeger_agent_host
  - secretKey: prometheus_auth_token
    remoteRef:
      key: secret/manager-q
      property: prometheus_auth_token
---
# External Secret for Agent Q
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: agent-q-vault-secrets
  namespace: q-platform
  labels:
    app.kubernetes.io/name: agent-q-vault-secrets
    app.kubernetes.io/component: agent-q
    app.kubernetes.io/managed-by: kustomize
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: agent-q-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: agent-q-secrets
          app.kubernetes.io/component: agent-q
      data:
        OPENAI_API_KEY: "{{ .openai_api_key }}"
        ANTHROPIC_API_KEY: "{{ .anthropic_api_key }}"
        GOOGLE_API_KEY: "{{ .google_api_key }}"
        COHERE_API_KEY: "{{ .cohere_api_key }}"
        PULSAR_AUTH_TOKEN: "{{ .pulsar_auth_token }}"
        VECTORSTORE_AUTH_TOKEN: "{{ .vectorstore_auth_token }}"
        KNOWLEDGEGRAPH_AUTH_TOKEN: "{{ .knowledgegraph_auth_token }}"
        QUANTUMPULSE_AUTH_TOKEN: "{{ .quantumpulse_auth_token }}"
        IGNITE_USERNAME: "{{ .ignite_username }}"
        IGNITE_PASSWORD: "{{ .ignite_password }}"
        KUBERNETES_SERVICE_TOKEN: "{{ .kubernetes_service_token }}"
        GITHUB_TOKEN: "{{ .github_token }}"
        GITLAB_TOKEN: "{{ .gitlab_token }}"
        DOCKER_REGISTRY_TOKEN: "{{ .docker_registry_token }}"
        SLACK_TOKEN: "{{ .slack_token }}"
        JIRA_TOKEN: "{{ .jira_token }}"
        CONFLUENCE_TOKEN: "{{ .confluence_token }}"
        ENCRYPTION_KEY: "{{ .encryption_key }}"
        JWT_SECRET: "{{ .jwt_secret }}"
  data:
  - secretKey: openai_api_key
    remoteRef:
      key: secret/agent-q
      property: openai_api_key
  - secretKey: anthropic_api_key
    remoteRef:
      key: secret/agent-q
      property: anthropic_api_key
  - secretKey: google_api_key
    remoteRef:
      key: secret/agent-q
      property: google_api_key
  - secretKey: cohere_api_key
    remoteRef:
      key: secret/agent-q
      property: cohere_api_key
  - secretKey: pulsar_auth_token
    remoteRef:
      key: secret/agent-q
      property: pulsar_auth_token
  - secretKey: vectorstore_auth_token
    remoteRef:
      key: secret/agent-q
      property: vectorstore_auth_token
  - secretKey: knowledgegraph_auth_token
    remoteRef:
      key: secret/agent-q
      property: knowledgegraph_auth_token
  - secretKey: quantumpulse_auth_token
    remoteRef:
      key: secret/agent-q
      property: quantumpulse_auth_token
  - secretKey: ignite_username
    remoteRef:
      key: secret/agent-q
      property: ignite_username
  - secretKey: ignite_password
    remoteRef:
      key: secret/agent-q
      property: ignite_password
  - secretKey: kubernetes_service_token
    remoteRef:
      key: secret/agent-q
      property: kubernetes_service_token
  - secretKey: github_token
    remoteRef:
      key: secret/agent-q
      property: github_token
  - secretKey: gitlab_token
    remoteRef:
      key: secret/agent-q
      property: gitlab_token
  - secretKey: docker_registry_token
    remoteRef:
      key: secret/agent-q
      property: docker_registry_token
  - secretKey: slack_token
    remoteRef:
      key: secret/agent-q
      property: slack_token
  - secretKey: jira_token
    remoteRef:
      key: secret/agent-q
      property: jira_token
  - secretKey: confluence_token
    remoteRef:
      key: secret/agent-q
      property: confluence_token
  - secretKey: encryption_key
    remoteRef:
      key: secret/agent-q
      property: encryption_key
  - secretKey: jwt_secret
    remoteRef:
      key: secret/agent-q
      property: jwt_secret
---
# External Secret for Database Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: q-platform
  labels:
    app.kubernetes.io/name: database-credentials
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: kustomize
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: database-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: database-credentials
          app.kubernetes.io/component: database
      data:
        CASSANDRA_USERNAME: "{{ .cassandra_username }}"
        CASSANDRA_PASSWORD: "{{ .cassandra_password }}"
        CASSANDRA_ROOT_PASSWORD: "{{ .cassandra_root_password }}"
        POSTGRES_USERNAME: "{{ .postgres_username }}"
        POSTGRES_PASSWORD: "{{ .postgres_password }}"
        POSTGRES_ROOT_PASSWORD: "{{ .postgres_root_password }}"
        MILVUS_USERNAME: "{{ .milvus_username }}"
        MILVUS_PASSWORD: "{{ .milvus_password }}"
        MILVUS_ROOT_PASSWORD: "{{ .milvus_root_password }}"
        ELASTICSEARCH_USERNAME: "{{ .elasticsearch_username }}"
        ELASTICSEARCH_PASSWORD: "{{ .elasticsearch_password }}"
        MINIO_ROOT_USER: "{{ .minio_root_user }}"
        MINIO_ROOT_PASSWORD: "{{ .minio_root_password }}"
        MINIO_ACCESS_KEY: "{{ .minio_access_key }}"
        MINIO_SECRET_KEY: "{{ .minio_secret_key }}"
        IGNITE_USERNAME: "{{ .ignite_username }}"
        IGNITE_PASSWORD: "{{ .ignite_password }}"
  data:
  - secretKey: cassandra_username
    remoteRef:
      key: secret/database
      property: cassandra_username
  - secretKey: cassandra_password
    remoteRef:
      key: secret/database
      property: cassandra_password
  - secretKey: cassandra_root_password
    remoteRef:
      key: secret/database
      property: cassandra_root_password
  - secretKey: postgres_username
    remoteRef:
      key: secret/database
      property: postgres_username
  - secretKey: postgres_password
    remoteRef:
      key: secret/database
      property: postgres_password
  - secretKey: postgres_root_password
    remoteRef:
      key: secret/database
      property: postgres_root_password
  - secretKey: milvus_username
    remoteRef:
      key: secret/database
      property: milvus_username
  - secretKey: milvus_password
    remoteRef:
      key: secret/database
      property: milvus_password
  - secretKey: milvus_root_password
    remoteRef:
      key: secret/database
      property: milvus_root_password
  - secretKey: elasticsearch_username
    remoteRef:
      key: secret/database
      property: elasticsearch_username
  - secretKey: elasticsearch_password
    remoteRef:
      key: secret/database
      property: elasticsearch_password
  - secretKey: minio_root_user
    remoteRef:
      key: secret/database
      property: minio_root_user
  - secretKey: minio_root_password
    remoteRef:
      key: secret/database
      property: minio_root_password
  - secretKey: minio_access_key
    remoteRef:
      key: secret/database
      property: minio_access_key
  - secretKey: minio_secret_key
    remoteRef:
      key: secret/database
      property: minio_secret_key
  - secretKey: ignite_username
    remoteRef:
      key: secret/database
      property: ignite_username
  - secretKey: ignite_password
    remoteRef:
      key: secret/database
      property: ignite_password
---
# External Secret for Observability
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: observability-credentials
  namespace: q-platform
  labels:
    app.kubernetes.io/name: observability-credentials
    app.kubernetes.io/component: observability
    app.kubernetes.io/managed-by: kustomize
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: vault-secret-store
    kind: SecretStore
  target:
    name: observability-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: observability-credentials
          app.kubernetes.io/component: observability
      data:
        PROMETHEUS_ADMIN_PASSWORD: "{{ .prometheus_admin_password }}"
        GRAFANA_ADMIN_PASSWORD: "{{ .grafana_admin_password }}"
        JAEGER_ADMIN_PASSWORD: "{{ .jaeger_admin_password }}"
        ALERTMANAGER_ADMIN_PASSWORD: "{{ .alertmanager_admin_password }}"
        ELASTICSEARCH_ADMIN_PASSWORD: "{{ .elasticsearch_admin_password }}"
        KIBANA_ADMIN_PASSWORD: "{{ .kibana_admin_password }}"
        TEMPO_ADMIN_PASSWORD: "{{ .tempo_admin_password }}"
        LOKI_ADMIN_PASSWORD: "{{ .loki_admin_password }}"
  data:
  - secretKey: prometheus_admin_password
    remoteRef:
      key: secret/observability
      property: prometheus_admin_password
  - secretKey: grafana_admin_password
    remoteRef:
      key: secret/observability
      property: grafana_admin_password
  - secretKey: jaeger_admin_password
    remoteRef:
      key: secret/observability
      property: jaeger_admin_password
  - secretKey: alertmanager_admin_password
    remoteRef:
      key: secret/observability
      property: alertmanager_admin_password
  - secretKey: elasticsearch_admin_password
    remoteRef:
      key: secret/observability
      property: elasticsearch_admin_password
  - secretKey: kibana_admin_password
    remoteRef:
      key: secret/observability
      property: kibana_admin_password
  - secretKey: tempo_admin_password
    remoteRef:
      key: secret/observability
      property: tempo_admin_password
  - secretKey: loki_admin_password
    remoteRef:
      key: secret/observability
      property: loki_admin_password 